####Template for assigning data layers to microgid cells.
####Update the Region, Estuary/Site Code, and StateGrids in the "Specifications" Section 
####Save as new working file then delete lines 1-4.
#
####Regional Florida MicroGrid Metadata Updates
#
#
#Use Alt+O to collapse all sections, Alt+Shift+O to expand all sections
#Each section builds upon the previous to add data to the microgrids:
#Data order: Estuary and Sections, Oysters in FL, SHA classifications, Seagrass area
#
#
#.rs.restartR() #Restarts session (good if rerunning after working with other files)
#graphics.off()  # turns off any plots from previous work session
#rm(list=ls(all=TRUE)) # clears out environment 
#
#Load require packages (should install missing packages as necessary) - MAKE SURE PACMAN IS INSTALLED AND RUNNING!
if (!require("pacman")) {install.packages("pacman")}
pacman::p_load(plyr, tidyverse, #Df manipulation, basic summary
               sf, raster, terra,
               leaflet, tmap, 
               install = TRUE) #Mapping and figures
#
####Specifications####
#
#Assign Region, Estuary Code, and StateGrid(s). Only assign the Alternate state grid if required.
Region <- c("SouthEast") #SouthEast, SouthWest, NorthEast, NorthWest, NorthCentral
Site_Code <- c("SL") #Two-letter Site code
State_Grid <- c("H4")
#Alt_State_Grid <- c("H5") 
#
###Throughout this file, a primary State_Grid is used with the option of an alternate or additional StateGrid.
###If an estuary falls completely within 1 StateGrid, skip lines for the "Alt" as instructed in each section.
#
#Specify if data should be included ("YES") or not included ("NO")
Florida_Oysters <- c("YES")
Florida_Seagrass <- c("YES")
Florida_Waterways <- c("YES")
Florida_SHA <- c("NO")
Depth <- c("YES")
Salinity <- c("YES")
Temperature <- c("YES")
#
#
####Reference Tables####
#Estuary names and SHA codes
(Estuary_long <- read.csv("../Reference Files/Estuary_SiteCodes.csv", na.string = c("Z", "", "NA", " ")))
(SHA_Codes <- read.csv("../Reference Files/SHA_Class_Codes.csv", na.string = c("Z", "", "NA", " ")) %>% 
    mutate(Subsection = factor(Subsection, unique(Subsection)))) #Set SHA priority
(Section_Order <- read.csv("../Reference Files/Section_Orders.csv", na.string = c("Z", "", "NA", " ")) %>%
    filter(Site == Site_Code) %>% arrange(Order) %>% #Limit to desired Site and order Sections
    mutate(Section = factor(Section, unique(Section)))) #Set Section priority
#
#
#
#
####Load grid cells of interest####
#
##MicroGrid - skip "Alt[...]" lines if no Alternate StateGrid
#Load StateGrid, check data, view map  to confirm area
MicroGrid <- st_read(paste0("../Base Layers/MicroGrids/Florida_MicroGrid_WGS84_",State_Grid,"_clip.shp"))
plot(MicroGrid$geometry)
head(MicroGrid)
#
Alt_MicroGrid <- st_read(paste0("../Base Layers/MicroGrids/Florida_MicroGrid_WGS84_",Alt_State_Grid,"_clip.shp"))
plot(Alt_MicroGrid$geometry) #Check alternate
head(Alt_MicroGrid)
#
#
##Estuary area and Sections - change to whole estuary KML layer name and section names
#Copy and add Sections as needed for additional sections, changing the number sequentially
Estuary_area <- st_read(paste0("../Base Layers/Site_Region_Areas/",Site_Code,".kml"))
#
plot(Estuary_area[2])
head(Estuary_area)
#
Section1 <- st_read("../Base Layers/Site_Region_Areas/SL-Central.kml") 
plot(Section1[2])
#
Section2 <- st_read("../Base Layers/Site_Region_Areas/SL-North.kml") 
plot(Section2[2])
#
Section3 <- st_read("../Base Layers/Site_Region_Areas/SL-South.kml") 
plot(Section3[2])
#
#
#
#
